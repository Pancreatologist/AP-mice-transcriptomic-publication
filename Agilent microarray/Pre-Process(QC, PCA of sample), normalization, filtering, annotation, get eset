###Reading Microarray Data
#create a tab-delimited file, targets.txt
target <- readTargets("CER.txt" ) #import all the CER group and control group
RG <- read.maimages(target, source ="agilent") #read files

#colnames(RG) <- sub('raw\\/', '', colnames(RG))


spottypes <- readSpotTypes()
RG$genes$Status <- controlStatus(spottypes, RG)
plotMD(RG)
boxplot(data.frame(log2(RG$Gb)),main="Green background") #quality characteristics of each array
boxplot(data.frame(log2(RG$Rb)),main="Red background")
imageplot(log2(RG$Gb[,1]),RG$printer)

###Reading Probe Annotation
names(RG$genes) #read.maimages() will contain a component called genes containing the IDs and other annotation information associated with the probes
#RG$genes <- readGAL() #If the genes component is not set, the probe IDs will need to be read from a separate file

###Quality Assessment
summary(RG$R)
plotMD(RG)
boxplot(data.frame(log2(RG$Gb)),main="Green background") #quality characteristics of each array
boxplot(data.frame(log2(RG$Rb)),main="Red background")
imageplot(log2(RG$Gb[,1]),RG$printer)

###PCA for group before the normolization 
PCA <- prcomp(t(eset), scale = FALSE)
percentVar <- round(100*PCA$sdev^2/sum(PCA$sdev^2),1)
sd_ratio <- sqrt(percentVar[2] / percentVar[1])
dataGG <- data.frame(PC1 = PCA$x[,1], PC2 = PCA$x[,2],
                     Disease =
                       sampleinfo$Group)
ggplot(dataGG, aes(PC1, PC2)) +
  geom_point(aes(shape = Disease)) +
  ggtitle("PCA plot of the calibrated, summarized data") +
  xlab(paste0("PC1, VarExp: ", percentVar[1], "%")) +
  ylab(paste0("PC2, VarExp: ", percentVar[2], "%")) +
  theme(plot.title = element_text(hjust = 0.5)) +
  coord_fixed(ratio = sd_ratio) +
  scale_shape_manual(values = c(4,15)) +
  scale_color_manual(values = c("darkorange2", "dodgerblue4"))
  
###groups <- as.factor(decathlon2$Competition[1:23])
###fviz_pca_ind(res.pca,
             col.ind = groups, # color by groups
             palette = c("#00AFBB",  "#FC4E07"),
             addEllipses = TRUE, # Concentration ellipses
             ellipse.type = "confidence",
             legend.title = "Groups",
             repel = TRUE
             )
###PCA分析
data.pca <- prcomp(data, scale. = T)  #这是后续作图的文件
#输出特征向量
write.table(data.pca$rotation, file="PC.xls", quote=F, sep = "\t")
#输出新表
write.table(predict(data.pca), file="newTab.xls", quote=F, sep = "\t")
#输出PC比重
pca.sum=summary(data.pca)
write.table(pca.sum$importance, file="importance.xls", quote=F, sep = "\t")
##group=c(rep("Control",3),rep("Test",3)) #make group
##fviz_pca_ind(data.pca,
             col.ind=group,
             mean.point=F,
             addEllipses = T, 
             legend.title="Groups",
             ellipse.type="confidence",
             ellipse.level=0.9,
             palette = c("#CC3333", "#339999"))+ #Cell配色哦
  theme(panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"))#加个边框
###Pre-Processing Two-Color Data
### Perform background correction on the fluorescent intensities
RG.bgcorrect <- backgroundCorrect(RG, method = 'normexp', offset = 16)
### Normalize the data in array with the 'loess' method
RG.bgcorrect.norm <- normalizeWithinArrays(RG.bgcorrect, method = 'loess')
plotMD(RG.bgcorrect.norm)
### Normalize the data between arrays 
MA <- normalizeBetweenArrays(RG.bgcorrect.norm, method = "Aquantile")
plotDensities(RG.bgcorrect.norm)#check the signal density map
plotDensities(MA)
MA$genes$ControlType %>% unique() #include what category of probe

### remove the control probe
keepProbe <- MA$genes$ControlType == 0
MA.reomoveCTprobe <- MA[keepProbe,] #remove the control probe
MA.reomoveCTprobe$genes$ProbeName %>% table() %>% sort(decreasing = TRUE) %>% head(n = 3) 
MA.reomoveCTprobe.average <- avereps(MA.reomoveCTprobe, ID = MA.reomoveCTprobe$genes$ProbeName) # take an average of probe

### For replicate probes in each sample, replace values with the average
MA.reomoveCTprobe.average <- avereps(
  MA.reomoveCTprobe,
  ID = MA.reomoveCTprobe$genes$ProbeName)


