###Reading Microarray Data
target <- readTargets("Targets.txt" )
RG <- read.maimages(target, source ="agilent") #read files
spottypes <- readSpotTypes()
RG$genes$Status <- controlStatus(spottypes, RG)
plotMD(RG)
boxplot(data.frame(log2(RG$Gb)),main="Green background") #quality characteristics of each array
boxplot(data.frame(log2(RG$Rb)),main="Red background")
imageplot(log2(RG$Gb[,1]),RG$printer)

###Reading Probe Annotation
names(RG$genes) #read.maimages() will contain a component called genes containing the IDs and other annotation information associated with the probes
#RG$genes <- readGAL() #If the genes component is not set, the probe IDs will need to be read from a separate file

###Quality Assessment
spottypes <- readSpotTypes()
RG$genes$Status <- controlStatus(spottypes, RG)
plotMD(RG) #view the MA-plots of the unnormalized data for each array
#background intensities to the quality characteristics of each array
boxplot(data.frame(log2(RG$Gb)),main="Green background")
boxplot(data.frame(log2(RG$Rb)),main="Red background")
imageplot(log2(RG$Gb[,1]),RG$printer) #Spatial heterogeneity on individual arrays be highlighted by examining imageplots of the background intensities

###Pre-Processing Two-Color Data
##Background Correction and Normalization
RG <- backgroundCorrect(RG, method="normexp", offset=50) #assessing differential expression
##Within-Array Normalization
MA <- normalizeWithinArrays(RG, method="loess") #Agilent arrays do not have print-tip groups, should use global loess normalization 
##Between-Array Normalization
RG.b <- backgroundCorrect(RG,method="minimum")
plotDensities(RG.b)
MA.p <-normalizeWithinArrays(RG.b)
MA.pAq <- normalizeBetweenArrays(MA.p, method="Aquantile")
plotDensities(MA.pAq)

###Filtering
Control <- MA$genes$ControlType==1L;table(Control)
NoSymbol <- is.na(MA$genes$GeneName);table(NoSymbol)
IsExpr <- rowSums(MA$other$gIsWellAboveBG > 0) >= 4;table(IsExpr)
MAfilt <- MA[!Control & !NoSymbol & IsExpr & !Isdup, ]
dim(MAfilt)
eset = MAfilt@.Data[[1]]
boxplot(eset)
eset[1:2,1:2]

###annotation
anno = MAfilt$genes
nrow(anno);nrow(eset)
rownames(eset)=rownames(anno)
ids = unique(anno$GeneName)
eset = eset[!duplicated(anno$GeneName),]
rownames(exp) = ids
eset[1:4,1:4]
write.exprs(eset,file="xxxdata.txt")
###PCA for group
PCA <- prcomp(t(eset), scale = FALSE)
percentVar <- round(100*PCA$sdev^2/sum(PCA$sdev^2),1)
sd_ratio <- sqrt(percentVar[2] / percentVar[1])
dataGG <- data.frame(PC1 = PCA$x[,1], PC2 = PCA$x[,2],
                     Disease =
                       sampleinfo$Group)
ggplot(dataGG, aes(PC1, PC2)) +
  geom_point(aes(shape = Disease)) +
  ggtitle("PCA plot of the calibrated, summarized data") +
  xlab(paste0("PC1, VarExp: ", percentVar[1], "%")) +
  ylab(paste0("PC2, VarExp: ", percentVar[2], "%")) +
  theme(plot.title = element_text(hjust = 0.5)) +
  coord_fixed(ratio = sd_ratio) +
  scale_shape_manual(values = c(4,15)) +
  scale_color_manual(values = c("darkorange2", "dodgerblue4"))
  
###groups <- as.factor(decathlon2$Competition[1:23])
###fviz_pca_ind(res.pca,
             col.ind = groups, # color by groups
             palette = c("#00AFBB",  "#FC4E07"),
             addEllipses = TRUE, # Concentration ellipses
             ellipse.type = "confidence",
             legend.title = "Groups",
             repel = TRUE
             )
###PCA分析
data.pca <- prcomp(data, scale. = T)  #这是后续作图的文件
#输出特征向量
write.table(data.pca$rotation, file="PC.xls", quote=F, sep = "\t")
#输出新表
write.table(predict(data.pca), file="newTab.xls", quote=F, sep = "\t")
#输出PC比重
pca.sum=summary(data.pca)
write.table(pca.sum$importance, file="importance.xls", quote=F, sep = "\t")
##group=c(rep("Control",3),rep("Test",3)) #make group
##fviz_pca_ind(data.pca,
             col.ind=group,
             mean.point=F,
             addEllipses = T, 
             legend.title="Groups",
             ellipse.type="confidence",
             ellipse.level=0.9,
             palette = c("#CC3333", "#339999"))+ #Cell配色哦
  theme(panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"))#加个边框
