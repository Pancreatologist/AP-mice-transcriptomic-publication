###Read in and normalise data
target <- readTargets("CER.txt" ) #import all the CER group and control group, including 4, 7, 12 injections. I just change the contrast matrix for the different comparation.
rownames(target) <- removeExt(target$FileName)
target
RG <- read.maimages(target, source ="agilent") #read files, as two-color array

###Quality Assessment
summary(RG$R)
plotMD(RG)
boxplot(data.frame(log2(RG$Gb)),main="Green background") #quality characteristics of each array
boxplot(data.frame(log2(RG$Rb)),main="Red background")
imageplot(log2(RG$Gb[,1]),RG$printer)

### Perform background correction on the fluorescent intensities
RG.bgcorrect <- backgroundCorrect(RG, method = 'normexp', offset = 16) #offset may depend on the number of sample (25%-50%)

### Normalize the data in array with the 'loess' method
RG.bgcorrect.norm <- normalizeWithinArrays(RG.bgcorrect, method = 'loess')
plotMD(RG.bgcorrect.norm)

### Normalize the data between arrays 
MA <- normalizeBetweenArrays(RG.bgcorrect.norm, method = "Aquantile")
plotDensities(RG.bgcorrect.norm)#check the signal density map
plotDensities(MA)
MA$genes$ControlType %>% unique() #include what category of probe

### remove the control probe
keepProbe <- MA$genes$ControlType == 0
MA.reomoveCTprobe <- MA[keepProbe,] #remove the control probe
MA.reomoveCTprobe$genes$ProbeName %>% table() %>% sort(decreasing = TRUE) %>% head(n = 3) 
MA.reomoveCTprobe.average <- avereps(MA.reomoveCTprobe, ID = MA.reomoveCTprobe$genes$ProbeName) # take an average of probe

### For replicate probes in each sample, replace values with the average
MA.reomoveCTprobe.average <- avereps(
  MA.reomoveCTprobe,
  ID = MA.reomoveCTprobe$genes$ProbeName)
MA.reomoveCTprobe.average$targets

###annotation gene names and filter no significance probe 
Annotationname = MA.reomoveCTprobe.average$genes %>% 
  filter( !grepl( "Unknown", Description ) ) %>% #there are many genes with Description 'unknown' 
  filter( !grepl( "^chr", GeneName ) ) # there are many gene names begin with 'chr'
rownames(Annotationname) <- Annotationname$GeneName 
#it has the gene name, Gordon Smyth also said that a few duplicate gene symbols cause no problems so it is generally best to simply keep all the probes in the DE analysis
#https://www.biostars.org/p/484527/#486185, so for the DE analyze visa MA.list i annotated them after DE, but i annotation before DE analyze of eset following your suggestion

### Array Quality Weights
arrayw <- arrayWeights(MA.reomoveCTprobe.average)
barplot(arrayw, xlab="Array", ylab="Weight", col="white", las=2) #there is one array with too much high Weight which may not be verified so i removed this array.
abline(h=1, lwd=1, lty=2)

### analyze from MA list #in this way, i only can do it up to DEG via topTable function
targets2 <- targetsA2C(target)
u <- unique(targets2$Target)
f <- factor(targets2$Target, levels=u)
design <- model.matrix(~0+f) #make the design with each color of total sample
#design <-  model.matrix(~f+targets2$Batch) #there is the information of batch on the target, but when i added the batch, it doesnt work 
colnames(design) <- u
rownames(design) <- rownames(targets2)
corfit <- intraspotCorrelation(MA.reomoveCTprobe.average, design)
fit <- lmscFit(MA.reomoveCTprobe.average, design, correlation=corfit$consensus) # this is very important thing that i'm not sure. As i include all the array, 
                                                                                # but only choose part of them to make cont.matrix. Is it approprate to lmscFit it?
                                                                                # As limma package suggest, i choose 'lmscFit' instead of 'lmfit' which i also dont know
                                                                                # whether it is correct or not?
cont.matrix <- makeContrasts("wt.SC7-wt.C7","wt.SC7-wt.Control2","wt.C7-wt.Control2", levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)
volcanoplot(fit2)
topTable(fit2, coef=1, adjust="BH")
summary(topTable(fit2))
results <- decideTests(fit2)
vennDiagram(results)
glimmaVolcano(fit2, # glimmaVolcano, in glimma package, was used to do a Volcano plot for MA.list. But i dont know how to do it together. I just to know how to do it one by one via this code.
  main = 'wt.SC7-wt.C7',
  xlab = "logFC",
  ylab = "negLog10PValue",
  html = NULL,
  width = 920,
  height = 920) # adjP was default as 'BH'
volcanoplot (fit2) # volcanoplot is also success














